receivers:
  otlp:
    protocols:
      http:
      grpc:
  # The hostmetrics receiver is required to get correct infrastructure metrics in Datadog.
  hostmetrics:
    collection_interval: 10s
    scrapers:
      paging:
        metrics:
          system.paging.utilization:
            enabled: true
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      load:
      memory:
      network:
      processes:
  # filelog:
  #   start_at: beginning
  #   include:
  #     - /var/lib/docker/containers/*/*-json.log
  #   include_file_path: true
  #   poll_interval: 100ms
  #   operators:
  #     - type: json_parser
  #       timestamp:
  #         parse_from: attributes.time
  #         layout: '%Y-%m-%d %H:%M:%S'

    # filelog:
    # include:
    #   - /var/log/pods/**/*checkout*/*.log
    # start_at: end
    # poll_interval: 500ms
    # operators:
    #   - id: parse_log
    #     type: json_parser
    #     parse_from: body
    #   - id: trace
    #     type: trace_parser
    #     trace_id:
    #       parse_from: attributes.trace_id
    #     span_id:
    #       parse_from: attributes.span_id
    # attributes:
    #   ddtags: env:staging

  # hostmetrics:
  #     collection_interval: 30s
  #     scrapers:
  #       cpu:
  #       memory:
processors:
  batch:
    send_batch_max_size: 100
    send_batch_size: 10
    timeout: 10s

exporters:
  datadog:
    api:
      site: "datadoghq.com"
      key: ${env:DD_KEY}

extensions:
  health_check:
  pprof:
  zpages:

service:
  telemetry:
    logs:
      level: "debug"
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [datadog]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [datadog]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [datadog]
