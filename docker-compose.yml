version: '3'

services:
  oracle:
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: always
    networks:
      oracle-network:
    ports:
      - "8080:13523"
    labels:
      com.datadoghq.ad.check_names: '["openmetrics"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: |
        [
          {
            "openmetrics_endpoint": "http://%%host%%:13523/metrics",
            "namespace": "oracle",
            "metrics": [
              "oracle_metrics*",
            ]
          }
        ]

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    restart: always
    ports:
      - "4317:4317"
      - "55679:55679"
      - "8888:8888"
    networks:
      oracle-network:
        ipv4_address: 172.29.0.5
    volumes:
    - ./config/collector.yaml:/etc/otelcol/config.yaml
    command: ["--config=/etc/otelcol/config.yaml"]
    environment:
      - DD_KEY=${DD_KEY}

  # # Helps with Log processing
  # fluent-bit:
  #   image: fluent/fluent-bit:latest
  #   ports:
  #     - "24224:24224"
  #   volumes:
  #     - /var/lib/docker/containers:/var/lib/docker/containers
  #     - /var/run/docker.sock:/var/run/docker.sock

  # datadog-agent:
  #   image: gcr.io/datadoghq/agent:latest
  #   restart: always
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - /proc/:/host/proc/:ro
  #     - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
  #   environment:
  #     - DD_API_KEY=${DD_KEY}
  #     - DD_TAGS=${DEPLOY_ENV}
  #     - DD_SITE=datadoghq.com
  #     - DD_LOGS_ENABLED=true
  #     - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
  #     - DD_CONTAINER_EXCLUDE="name:datadog-agent"
  #   # ports:
  #   #   - "5000:5000"
  #   networks:
  #     oracle-network:
  #       ipv4_address: 172.29.0.4

networks:
  oracle-network:
    ipam:
      driver: default
      config:
        - subnet: 172.29.0.0/16
